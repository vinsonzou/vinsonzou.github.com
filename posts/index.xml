<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - cloudSky's 小站</title><link>https://ops.m114.org/posts/</link><description>所有文章 | cloudSky's 小站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 20 Oct 2021 16:47:09 +0800</lastBuildDate><atom:link href="https://ops.m114.org/posts/" rel="self" type="application/rss+xml"/><item><title>Golang中uint、int, int8, int16, int32, int64区别</title><link>https://ops.m114.org/post/go-int-vs-uint/</link><pubDate>Wed, 20 Oct 2021 16:47:09 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/go-int-vs-uint/</guid><description>Golang各种数值占据的大小 int 类型大小为 8 字节 int8 类型大小为 1 字节 int16 类型大小为 2 字节 int32 类型大小为 4 字节 int64 类型大小为 8 字节 go语言中的int的</description></item><item><title>Hugo使用Github Action自动部署到Github Pages</title><link>https://ops.m114.org/post/deploy-to-ghpages-with-github-action/</link><pubDate>Thu, 14 Oct 2021 16:35:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/deploy-to-ghpages-with-github-action/</guid><description>目的 hugo手动部署到github pages流程: 使用hugo生成静态网页 将静态网页push到建好的github pages repo中，一般是&amp;lt;</description></item><item><title>使用OpenResty reload ipsec服务</title><link>https://ops.m114.org/post/openresty-privileged-agent/</link><pubDate>Fri, 08 Oct 2021 11:13:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/openresty-privileged-agent/</guid><description>背景介绍 Debian 11 OpenResty 1.19.9.1 默认情况下，Nginx/OpenResty会启动一个root权限运行的master进程，之后再用指定的普通用户权限启动对应的</description></item><item><title>使用OpenResty mTLS认证</title><link>https://ops.m114.org/post/openresty-mtls/</link><pubDate>Wed, 29 Sep 2021 13:08:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/openresty-mtls/</guid><description>环境 CentOS 7 OpenResty 1.19.9.1 cosocket-mtls patch ngx_lua-0.10.20_01-cosocket-mtls.patch lua-resty-core-0.1.22_01-cosocket-mtls.patch lua-resty-http 为了支持mTLS功能，折腾的够呛，OpenResty官方又没支持，基于OpenResty的APISIX和Kong都有补</description></item><item><title>CFSSL使用</title><link>https://ops.m114.org/post/cfssl/</link><pubDate>Tue, 28 Sep 2021 09:08:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/cfssl/</guid><description>简介 在工作中，我们经常会遇到各种证书问题，如k8s,etcd等服务时，我们往往都要使用证书，本文将使用CFSSL工具快速简单的配置证书。这里</description></item><item><title>使用OpenResty实现简易CC防护</title><link>https://ops.m114.org/post/openresty-anticc/</link><pubDate>Sat, 11 Sep 2021 11:08:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/openresty-anticc/</guid><description>环境 CentOS 7 OpenResty 1.19.9.1 lua-resty-ipmatcher lua-var-nginx-module 功能 支持IP白名单 支持IP黑名单 计数key为：ip + &amp;ldquo;.&amp;rdquo; + md5(host + request_uri + useragent)，可自定义 60秒内请求超过60次就封禁3</description></item><item><title>防止SNI信息泄露</title><link>https://ops.m114.org/post/use-ssl_reject_handshake/</link><pubDate>Sun, 04 Jul 2021 10:08:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/use-ssl_reject_handshake/</guid><description>有了 ssl_reject_handshake (Nginx ≥ 1.19.4)这个参数，再也不需要strict-sni.patch了。 本质需求就是为了当机器人或者奇怪的人类通过HTTPS访问你的</description></item><item><title>巧用 cache-control: s-maxage 优化CDN和浏览器缓存同步</title><link>https://ops.m114.org/post/use-s-maxage-for-cdn/</link><pubDate>Mon, 14 Jun 2021 11:18:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/use-s-maxage-for-cdn/</guid><description>在实际使用中会发现，通常源站资源发生变化后，我们会尝试刷新CDN。但是由于用户浏览器依旧保留旧资源，造成访问不一致的问题。解决思路如下: 在源</description></item><item><title>使用Nginx实现授权下载</title><link>https://ops.m114.org/post/nginx-authorized-download/</link><pubDate>Fri, 11 Jun 2021 11:18:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/nginx-authorized-download/</guid><description>使用Nginx实现授权下载有两种方式，一种是nginx自带 --with-http_secure_link_module，另外一种是lua自定</description></item><item><title>lua实现微信机器人</title><link>https://ops.m114.org/post/nginx-wechat-ops/</link><pubDate>Fri, 11 Jun 2021 10:08:08 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/post/nginx-wechat-ops/</guid><description>使用企业微信调整值班人员信息，示例为联系人tag调整，可以自定义任何想实现功能。 环境 CentOS 7 Nginx lua-nginx-module lua-resty-http lua实现微信加密库 xml2lua ≤ v1.4-5 依赖服务 企业微信 配置</description></item></channel></rss>