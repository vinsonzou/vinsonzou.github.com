<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>proxy_protocol on ops</title>
    <link>https://ops.m114.org/tags/proxy_protocol/</link>
    <description>Recent content in proxy_protocol on ops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2014-2021. All rights reserved.</copyright>
    <lastBuildDate>Mon, 19 Apr 2021 17:01:15 +0800</lastBuildDate><atom:link href="https://ops.m114.org/tags/proxy_protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4层TCP转发后获得真实IP之proxy_protocol</title>
      <link>https://ops.m114.org/post/tcp-proxy-get-source-ip-by-proxy_protocol/</link>
      <pubDate>Mon, 19 Apr 2021 17:01:15 +0800</pubDate>
      
      <guid>https://ops.m114.org/post/tcp-proxy-get-source-ip-by-proxy_protocol/</guid>
      <description>需求 后端TCP Server在经过TCP代理(nginx stream模块)后，程序不做任何调整获得用户真实IP。 了解到cloudflare的spectrum产品与我们这个需求一致，刚好有细节和源码分享，参考如下:
 https://blog.cloudflare.com/mmproxy-creative-way-of-preserving-client-ips-in-spectrum/ https://github.com/cloudflare/mmproxy  有公司参考cloudflare的mmproxy，用golang实现了性能更优的版本。
 https://github.com/path-network/go-mmproxy  部署 拓扑与cloudflare spectrum产品一样，示意图如下：
 go &amp;gt; 1.11 as root or with CAP_NET_RAW capability to be able to set IP_TRANSPARENT socket opt.  go get github.com/path-network/go-mmproxy sudo setcap cap_net_raw=+ep $(readlink -f $(which go-mmproxy)) 测试  启动  # go-mmproxy监听端口为25577，TCP后端端口为25578 ip rule add from 127.0.0.1/8 iif lo table 123 ip route add local 0.0.0.0/0 dev lo table 123 go-mmproxy -l 0.</description>
    </item>
    
  </channel>
</rss>
