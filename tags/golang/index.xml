<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>golang - 标签 - cloudSky's 小站</title><link>https://ops.m114.org/tags/golang/</link><description>golang - 标签 - cloudSky's 小站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 18 May 2021 10:08:00 +0800</lastBuildDate><atom:link href="https://ops.m114.org/tags/golang/" rel="self" type="application/rss+xml"/><item><title>golang encrypt/decrypt by MacOS keychain</title><link>https://ops.m114.org/golang-aes-crypt/</link><pubDate>Tue, 18 May 2021 10:08:00 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/golang-aes-crypt/</guid><description>功能如下: AES加密/解密 AES秘钥从MacOS keychain读取 支持Data At Rest Encryption (DARE)，加密文件内存占用小于100K，参考 sio</description></item><item><title>4层TCP转发后获得真实IP之proxy_protocol</title><link>https://ops.m114.org/tcp-proxy-get-source-ip-by-proxy_protocol/</link><pubDate>Mon, 19 Apr 2021 17:01:15 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/tcp-proxy-get-source-ip-by-proxy_protocol/</guid><description>需求 后端TCP Server在经过TCP代理(nginx stream模块)后，程序不做任何调整获得用户真实IP。 了解到cloudflare的s</description></item><item><title>go如何编译出更小的执行文件?</title><link>https://ops.m114.org/go-build-small-exec/</link><pubDate>Wed, 23 Aug 2017 23:38:09 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/go-build-small-exec/</guid><description>前言 本地默认编译出的文件总与官方提供的二进制文件大很多，Google之后得知通过编译参数控制还能编译出更小的可执行文件。 加-ldflags参</description></item><item><title>Golang之command line flag笔记</title><link>https://ops.m114.org/golang-command-line-flags/</link><pubDate>Wed, 16 Aug 2017 23:28:33 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/golang-command-line-flags/</guid><description><![CDATA[示例代码，仅供参考 package main import ( &#34;fmt&#34; &#34;flag&#34; ) func main() { // golang的flag包的一些基本使用方法 // 待使用的变量 var id int var name string var male bool // 是否已经解析 fmt.Println(&#34;parsed? = &#34;, flag.Parsed()) // 设]]></description></item><item><title>golang sync.WaitGroup解决goroutine同步</title><link>https://ops.m114.org/sync-waitgroup/</link><pubDate>Mon, 03 Jul 2017 16:27:12 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/sync-waitgroup/</guid><description>**go提供了sync包和channel来解决协程同步和通讯。**新手对channel通道操作起来更容易产生死锁，如果时缓冲的channel</description></item><item><title>使用Hugo搭建免费个人Blog</title><link>https://ops.m114.org/how-to-use-hugo/</link><pubDate>Tue, 11 Nov 2014 17:15:00 +0800</pubDate><author>作者</author><guid>https://ops.m114.org/how-to-use-hugo/</guid><description>Hugo是什么 Hugo是一个工具，可以用于搭建静态站点，类似jekyll，不过Hugo是Golang写的，大家应该知道Golang有一个对部</description></item></channel></rss>