<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RocketMQ on ops</title><link>https://ops.m114.org/tags/RocketMQ/</link><description>Recent content in RocketMQ on ops</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&amp;copy; 2014-2021. All rights reserved.</copyright><lastBuildDate>Thu, 03 Jun 2021 15:08:08 +0800</lastBuildDate><atom:link href="https://ops.m114.org/tags/RocketMQ/index.xml" rel="self" type="application/rss+xml"/><item><title>lua发布消息至RocketMQ解耦</title><link>https://ops.m114.org/post/nginx-use-mq/</link><pubDate>Thu, 03 Jun 2021 15:08:08 +0800</pubDate><guid>https://ops.m114.org/post/nginx-use-mq/</guid><description>广告点击回传数据入消息队列，避免后端处理不过来，先存入消息队列削峰。
环境 CentOS 7 Nginx lua-nginx-module lua-resty-core lua-resty-http 依赖服务 阿里云RocketMQ 配置 对应nginx location配置
location / { access_by_lua_file lua/mq/mq.lua; } custom/mq.lua
return { AKId = &amp;#34;xxx&amp;#34;, -- RocketMQ的AccessKeyId AKSecret = &amp;#34;xxx&amp;#34;, -- RocketMQ的AccessKeySecret topic_name = &amp;#34;xxx&amp;#34;, -- RocketMQ的topic instance_id = &amp;#34;xxx&amp;#34; -- RocketMQ的instance_id } mq.lua
local require = require local ngx = ngx local config = require(&amp;#34;custom.mq.config&amp;#34;) local http = require &amp;#34;resty.http&amp;#34; local cjson = require &amp;#34;cjson.</description></item></channel></rss>