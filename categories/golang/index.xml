<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>golang - 分类 - cloudSky's 小站</title><link>https://ops.m114.org/categories/golang/</link><description>golang - 分类 - cloudSky's 小站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 07 Jan 2022 09:48:03 +0800</lastBuildDate><atom:link href="https://ops.m114.org/categories/golang/" rel="self" type="application/rss+xml"/><item><title>[Go] 实时监控日志文件的包tail</title><link>https://ops.m114.org/post/golang-tail/</link><pubDate>Fri, 07 Jan 2022 09:48:03 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/golang-tail/</guid><description><![CDATA[在linux中有一个tail命令，tail -f 可以实时的监控文件新增加的内容，如果用代码实现这个逻辑，可以使用这个包 go get github.com/hpcloud/tail 示例代码 package main import ( &#34;fmt&#34; &#34;github.com/hpcloud/tail&#34;]]></description></item><item><title>Windows下cmd运行go，出现假死现象，已解决</title><link>https://ops.m114.org/post/fix-windows-cmd-hang/</link><pubDate>Tue, 14 Dec 2021 13:50:03 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/fix-windows-cmd-hang/</guid><description>最近遇到一个很尴尬的现象，现象如下: 在windows上部署了一个go web应用，运行一段时间项目就假死一样，telnet端口是通的，但调用接</description></item><item><title>Golang中uint、int, int8, int16, int32, int64区别</title><link>https://ops.m114.org/post/go-int-vs-uint/</link><pubDate>Wed, 20 Oct 2021 16:47:09 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/go-int-vs-uint/</guid><description>Golang各种数值占据的大小 int 类型大小为 8 字节 int8 类型大小为 1 字节 int16 类型大小为 2 字节 int32 类型大小为 4 字节 int64 类型大小为 8 字节 go语言中的int的</description></item><item><title>golang encrypt/decrypt by MacOS keychain</title><link>https://ops.m114.org/post/golang-aes-crypt/</link><pubDate>Tue, 18 May 2021 10:08:00 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/golang-aes-crypt/</guid><description>功能如下: AES加密/解密 AES秘钥从MacOS keychain读取 支持Data At Rest Encryption (DARE)，加密文件内存占用小于100K，参考 sio</description></item><item><title>4层TCP转发后获得真实IP之proxy_protocol</title><link>https://ops.m114.org/post/tcp-proxy-get-source-ip-by-proxy_protocol/</link><pubDate>Mon, 19 Apr 2021 17:01:15 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/tcp-proxy-get-source-ip-by-proxy_protocol/</guid><description>需求 后端TCP Server在经过TCP代理(nginx stream模块)后，程序不做任何调整获得用户真实IP。 了解到cloudflare的s</description></item><item><title>go如何编译出更小的执行文件?</title><link>https://ops.m114.org/post/go-build-small-exec/</link><pubDate>Wed, 23 Aug 2017 23:38:09 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/go-build-small-exec/</guid><description>前言 本地默认编译出的文件总与官方提供的二进制文件大很多，Google之后得知通过编译参数控制还能编译出更小的可执行文件。 加-ldflags参</description></item><item><title>golang sync.WaitGroup解决goroutine同步</title><link>https://ops.m114.org/post/sync-waitgroup/</link><pubDate>Mon, 03 Jul 2017 16:27:12 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/sync-waitgroup/</guid><description>**go提供了sync包和channel来解决协程同步和通讯。**新手对channel通道操作起来更容易产生死锁，如果时缓冲的channel</description></item></channel></rss>