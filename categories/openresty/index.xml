<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>OpenResty - 分类 - cloudSky's 小站</title><link>https://ops.m114.org/categories/openresty/</link><description>OpenResty - 分类 - cloudSky's 小站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 10 Nov 2023 13:13:00 +0800</lastBuildDate><atom:link href="https://ops.m114.org/categories/openresty/" rel="self" type="application/rss+xml"/><item><title>使用balancer_by_lua实现动态转发</title><link>https://ops.m114.org/post/openresty-balancer/</link><pubDate>Fri, 10 Nov 2023 13:13:00 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/openresty-balancer/</guid><description>0x01 需求 与第三方对接时，平台只能配置1个回调地址，但现在又有多个服务地址。根据平台回调功能，每个请求header中都会携带server(ser</description></item><item><title>luajit 64位位运算</title><link>https://ops.m114.org/post/lua-bit/</link><pubDate>Fri, 10 Nov 2023 10:40:03 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/lua-bit/</guid><description><![CDATA[春哥说的，luajit 支持64位位运算。通过 int64_t 或者 uint64_t 类型的 FFI cdata 类型。比如 $ luajit -e &#39;local bit = require &#34;bit&#34; print(bit.lshift(0xffffffffffLL, 1))&#39; 2199023255550LL 参考 https://forum.openresty.us/d/2827-718049530f7d8de817ffe41defbfd6b5]]></description></item><item><title>Lua实现返回内容gzip解压/压缩</title><link>https://ops.m114.org/post/lua-gzip/</link><pubDate>Fri, 12 May 2023 12:43:03 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/lua-gzip/</guid><description>背景 最近要获取 jira 返回数据更新关注列表，jira 服务器的请求和返回的数据默认进行了 gzip 压缩。目前有 2 种方式 jira 设置中关闭 gzip 压缩 使用 lua 对 gzip 进行解压，</description></item><item><title>Lua小数四舍五入</title><link>https://ops.m114.org/post/lua-math/</link><pubDate>Fri, 25 Mar 2022 10:40:03 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/lua-math/</guid><description>保留整数 math.floor(x + 0.5) // 4.4 --&amp;gt; 4 math.floor(x) // 会直接舍弃小数点后的部分 保留几位小数进行四舍五入 公式为: math.floor(x * num + 0.5) / num 保留2位 num为100，3位为1000，… 比</description></item><item><title>lua-resty-openssl module not found</title><link>https://ops.m114.org/post/lua-resty-openssl-module-not-found/</link><pubDate>Tue, 07 Dec 2021 20:08:13 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/lua-resty-openssl-module-not-found/</guid><description><![CDATA[环境 OS: CentOS 8.4 OpenResty: 1.19.9.1(手动编译) OpenResty prefix: /app/nginx lua_package_path &quot;$prefix/lualib/?.lua;;&quot;; 报错如下 2021/12/07 18:56:11 [error] 2383822#0: *1 lua entry thread aborted: runtime error: /app/nginx//lualib/resty/openssl/pkey.lua:13: module &#39;resty.openssl.include.x509&#39; not found: no field package.preload[&#39;resty.openssl.include.x509&#39;] no file &#39;/app/nginx//lualib/resty/openssl/include/x509.lua&#39; no file &#39;./resty/openssl/include/x509.lua&#39; no file &#39;/app/nginx/luajit/share/luajit-2.1.0-beta3/resty/openssl/include/x509.lua&#39; no file &#39;/usr/local/share/lua/5.1/resty/openssl/include/x509.lua&#39; no file &#39;/usr/local/share/lua/5.1/resty/openssl/include/x509/init.lua&#39; no file &#39;/app/nginx/luajit/share/lua/5.1/resty/openssl/include/x509.lua&#39; no file &#39;/app/nginx/luajit/share/lua/5.1/resty/openssl/include/x509/init.lua&#39; 其]]></description></item><item><title>使用OpenResty reload ipsec服务</title><link>https://ops.m114.org/post/openresty-privileged-agent/</link><pubDate>Fri, 08 Oct 2021 11:13:08 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/openresty-privileged-agent/</guid><description>背景介绍 Debian 11 OpenResty 1.19.9.1 默认情况下，Nginx/OpenResty会启动一个root权限运行的master进程，之后再用指定的普通用户权限启动对应的</description></item><item><title>使用OpenResty mTLS认证</title><link>https://ops.m114.org/post/openresty-mtls/</link><pubDate>Wed, 29 Sep 2021 13:08:08 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/openresty-mtls/</guid><description>环境 CentOS 7 OpenResty 1.19.9.1 cosocket-mtls patch ngx_lua-0.10.20_01-cosocket-mtls.patch lua-resty-core-0.1.22_01-cosocket-mtls.patch lua-resty-http 为了支持mTLS功能，折腾的够呛，OpenResty官方又没支持，基于OpenResty的APISIX和Kong都有补</description></item><item><title>使用OpenResty实现简易CC防护</title><link>https://ops.m114.org/post/openresty-anticc/</link><pubDate>Sat, 11 Sep 2021 11:08:08 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/openresty-anticc/</guid><description>环境 CentOS 7 OpenResty 1.19.9.1 lua-resty-ipmatcher lua-var-nginx-module 功能 支持IP白名单 支持IP黑名单 计数key为：ip + &amp;ldquo;.&amp;rdquo; + md5(host + request_uri + useragent)，可自定义 60秒内请求超过60次就封禁3</description></item><item><title>使用Nginx实现授权下载</title><link>https://ops.m114.org/post/nginx-authorized-download/</link><pubDate>Fri, 11 Jun 2021 11:18:08 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/nginx-authorized-download/</guid><description>使用Nginx实现授权下载有两种方式，一种是nginx自带 --with-http_secure_link_module，另外一种是lua自定</description></item><item><title>lua实现微信机器人</title><link>https://ops.m114.org/post/nginx-wechat-ops/</link><pubDate>Fri, 11 Jun 2021 10:08:08 +0800</pubDate><author><name>CloudSky</name></author><guid>https://ops.m114.org/post/nginx-wechat-ops/</guid><description>使用企业微信调整值班人员信息，示例为联系人tag调整，可以自定义任何想实现功能。 环境 CentOS 7 Nginx lua-nginx-module lua-resty-http lua实现微信加密库 xml2lua ≤ v1.4-5 依赖服务 企业微信 配置</description></item></channel></rss>